/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.ambiente.bancario.views;

import com.fasterxml.jackson.core.JsonProcessingException;
import com.mycompany.ambiente.bancario.dto.AccountDto;
import com.mycompany.ambiente.bancario.dto.UserDto;
import java.io.IOException;
import java.text.NumberFormat;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFormattedTextField;
import services.ApiService;
import utils.Message;

/**
 *
 * @author igorl
 */
public class CriarConta extends javax.swing.JFrame {

    /**
     * Creates new form CreateAccount
     */
    public CriarConta() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        nomeDeUsuarioTextField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        criarContaButton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        tipoDeContaComboBox = new javax.swing.JComboBox<>();
        incomeValueLabel = new javax.swing.JLabel();
        excessLimitValueLabel = new javax.swing.JLabel();
        saldoTextField = new javax.swing.JTextField();
        chequeEspecialTextField = new javax.swing.JTextField();
        rendimentoPoupancaTextField = new javax.swing.JTextField();
        senhaTextField = new javax.swing.JPasswordField();
        voltarButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        nomeDeUsuarioTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nomeDeUsuarioTextFieldActionPerformed(evt);
            }
        });

        jLabel1.setText("Nome");

        jLabel2.setText("Senha");

        jLabel3.setText("Saldo");

        criarContaButton.setText("Criar Conta");
        criarContaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                criarContaButtonActionPerformed(evt);
            }
        });

        jLabel4.setText("Tipo de Conta");

        tipoDeContaComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Corrente", "Poupança", "Especial" }));
        tipoDeContaComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tipoDeContaComboBoxActionPerformed(evt);
            }
        });

        incomeValueLabel.setText("Rendimento Poupança");
        incomeValueLabel.setVisible(false);

        excessLimitValueLabel.setText("Cheque Especial");
        excessLimitValueLabel.setVisible(false);

        saldoTextField.setText(" ");
        saldoTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saldoTextFieldActionPerformed(evt);
            }
        });

        chequeEspecialTextField.setVisible(false);
        chequeEspecialTextField.setToolTipText("");

        rendimentoPoupancaTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rendimentoPoupancaTextFieldActionPerformed(evt);
            }
        });
        rendimentoPoupancaTextField.setVisible(false);

        voltarButton.setText("Voltar");
        voltarButton.setActionCommand("");
        voltarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                voltarButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(nomeDeUsuarioTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(senhaTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel4)
                            .addComponent(tipoDeContaComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(saldoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(excessLimitValueLabel)
                                    .addComponent(chequeEspecialTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(incomeValueLabel)
                                    .addComponent(rendimentoPoupancaTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addComponent(criarContaButton)
                    .addComponent(voltarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(52, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(nomeDeUsuarioTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(senhaTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(saldoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tipoDeContaComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(22, 22, 22)
                            .addComponent(chequeEspecialTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(excessLimitValueLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(rendimentoPoupancaTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(incomeValueLabel)
                        .addGap(28, 28, 28)))
                .addGap(18, 18, 18)
                .addComponent(criarContaButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(voltarButton)
                .addContainerGap(133, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void nomeDeUsuarioTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nomeDeUsuarioTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nomeDeUsuarioTextFieldActionPerformed

    private void criarContaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_criarContaButtonActionPerformed
        ApiService apiService = new ApiService();

        Boolean usernameValidation = nomeDeUsuarioTextField.getText() != null && !nomeDeUsuarioTextField.getText().isEmpty();
        Boolean passwordValidation = senhaTextField.getPassword() != null && senhaTextField.getPassword().length > 0;
        Boolean balanceValidation = saldoTextField.getText() != null && !saldoTextField.getText().isEmpty();

        if (usernameValidation && passwordValidation && balanceValidation) {
            try {
                AccountDto accountDto = new AccountDto();
                UserDto userDto = new UserDto();

                userDto.setName(nomeDeUsuarioTextField.getText());
                userDto.setPassword(String.valueOf(senhaTextField.getPassword()));
                
                accountDto.setBalance(Double.valueOf(saldoTextField.getText()));

                if (tipoDeContaComboBox.getSelectedItem() == "Poupança") {
                    accountDto.setType("poupanca");

                    if (rendimentoPoupancaTextField.getText().matches("[0-9.]*")) {
                        accountDto.setIncome(Float.valueOf(rendimentoPoupancaTextField.getText()));
                    } else {
                        new Message(this, "Valor de \"Rendimento Poupança\" deve ser um número inteiro ou decimal", "Atenção").warningMessage();
                    }

                } else if (tipoDeContaComboBox.getSelectedItem() == "Especial") {
                    accountDto.setType("especial");

                    if (chequeEspecialTextField.getText().matches("[0-9.]*")) {
                        accountDto.setExtraWithdrawal(Float.valueOf(chequeEspecialTextField.getText()));
                    } else {
                        new Message(this, "Valor de \"Cheque Especial\" deve ser um número inteiro ou decimal", "Atenção").warningMessage();
                    }
                } else {
                    accountDto.setType("corrente");
                }
                
                UserDto criarUsuarioResponse = apiService.CriarUsuario(userDto);
                
                accountDto.setUserId(criarUsuarioResponse.getId());

                AccountDto response = apiService.CriarConta(accountDto);

                if (response != null) {
                    new Index().setVisible(true);
                    this.dispose();
                } else {
                    new Message(this, "Usuário inválido", "Atenção!").warningMessage();
                }
            } catch (JsonProcessingException ex) {
                new Message(this, "Erro ao validar conta, tente novamente.", "Atenção!").errorMessage();
                Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException e) {
                new Message(this, "Erro ao validar conta, tente novamente.", "Atenção!").errorMessage();
                throw new RuntimeException(e);
            }
        } else {
            new Message(this, "Por favor, preencha ambos os campos.", "Atenção!").warningMessage();
        }

    }//GEN-LAST:event_criarContaButtonActionPerformed


    private void tipoDeContaComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tipoDeContaComboBoxActionPerformed
        String selected = (String) tipoDeContaComboBox.getSelectedItem();

        if (null == selected) {
            excessLimitValueLabel.setVisible(false);
            chequeEspecialTextField.setVisible(false);
            incomeValueLabel.setVisible(false);
            rendimentoPoupancaTextField.setVisible(false);
        } else {
            switch (selected) {
                case "Poupança" -> {
                    excessLimitValueLabel.setVisible(false);
                    chequeEspecialTextField.setVisible(false);
                    incomeValueLabel.setVisible(true);
                    rendimentoPoupancaTextField.setVisible(true);
                }
                case "Especial" -> {
                    excessLimitValueLabel.setVisible(true);
                    chequeEspecialTextField.setVisible(true);
                    incomeValueLabel.setVisible(false);
                    rendimentoPoupancaTextField.setVisible(false);
                }
                default -> {
                    excessLimitValueLabel.setVisible(false);
                    chequeEspecialTextField.setVisible(false);
                    incomeValueLabel.setVisible(false);
                    rendimentoPoupancaTextField.setVisible(false);
                }
            }
        }

        this.revalidate();
        this.repaint();
        this.pack();
    }//GEN-LAST:event_tipoDeContaComboBoxActionPerformed

    private void saldoTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saldoTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_saldoTextFieldActionPerformed

    private void voltarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_voltarButtonActionPerformed
        new Index().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_voltarButtonActionPerformed

    private void rendimentoPoupancaTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rendimentoPoupancaTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rendimentoPoupancaTextFieldActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */

        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CriarConta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CriarConta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CriarConta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CriarConta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        NumberFormat formatoMonetario = NumberFormat.getCurrencyInstance(new Locale("pt", "BR"));

        JFormattedTextField campoMonetario = new JFormattedTextField(formatoMonetario);

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CriarConta().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField chequeEspecialTextField;
    private javax.swing.JButton criarContaButton;
    private javax.swing.JLabel excessLimitValueLabel;
    private javax.swing.JLabel incomeValueLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField nomeDeUsuarioTextField;
    private javax.swing.JTextField rendimentoPoupancaTextField;
    private javax.swing.JTextField saldoTextField;
    private javax.swing.JPasswordField senhaTextField;
    private javax.swing.JComboBox<String> tipoDeContaComboBox;
    private javax.swing.JButton voltarButton;
    // End of variables declaration//GEN-END:variables
}
